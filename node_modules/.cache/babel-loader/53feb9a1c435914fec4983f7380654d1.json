{"ast":null,"code":"var _jsxFileName = \"/Users/monamoghaddas/Sources/template/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport TextField from './components/TextField';\nimport Item from './components/Item';\nimport { useLocalStorage } from 'react-use';\nimport mockedData from './mockData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useLocalStorage('data', mockedData);\n  const [filterValue, setFilterValue] = useState('');\n  const [searchResults, setSearchResults] = useState(data);\n  const [searchTerm, setSearchTerm] = useState(null);\n\n  const removeTag = (id, tag) => {\n    const itemIndex = data.findIndex(item => item.id === id);\n    const item = { ...data[itemIndex]\n    };\n    item.tags.splice(item.tags.indexOf(tag), 1);\n    const newData = [...data];\n    newData[itemIndex] = item;\n    setData(newData);\n  };\n\n  const addTag = (id, tag) => {\n    const itemIndex = data.findIndex(item => item.id === id);\n    const item = { ...data[itemIndex]\n    };\n\n    if (!item.tags) {\n      item.tags = [tag];\n    } else {\n      item.tags.push(tag);\n    }\n\n    const newData = [...data];\n    newData[itemIndex] = item;\n    setData(newData);\n  };\n\n  useEffect(() => {\n    const results = searchTerm ? data.filter(item => {\n      var _item$tags;\n\n      return (item === null || item === void 0 ? void 0 : (_item$tags = item.tags) === null || _item$tags === void 0 ? void 0 : _item$tags.length) > 0 ? item.tags.includes(searchTerm) : false;\n    }) : data;\n    setSearchResults(results);\n  }, [data, searchTerm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"search\",\n          placeholder: \"Search Tags\",\n          value: filterValue,\n          onChange: e => setFilterValue(e.target.value),\n          onSubmit: () => setSearchTerm(filterValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), (searchResults === null || searchResults === void 0 ? void 0 : searchResults.length) > 0 ? searchResults.map((item, key) => /*#__PURE__*/_jsxDEV(Item, {\n        item: item,\n        addTag: addTag,\n        removeTag: removeTag\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Sorry we couldn't find any record with tag: \", searchTerm]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"EUWN1oJbh+RbdaEQp6NGomXyBkY=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/monamoghaddas/Sources/template/src/App.js"],"names":["React","useEffect","useState","TextField","Item","useLocalStorage","mockedData","App","data","setData","filterValue","setFilterValue","searchResults","setSearchResults","searchTerm","setSearchTerm","removeTag","id","tag","itemIndex","findIndex","item","tags","splice","indexOf","newData","addTag","push","results","filter","length","includes","e","target","value","map","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport TextField from './components/TextField'\nimport Item from './components/Item'\nimport { useLocalStorage } from 'react-use'\nimport mockedData from './mockData'\n\nfunction App() {\n  const [data, setData] = useLocalStorage('data', mockedData)\n  const [filterValue, setFilterValue] = useState('')\n  const [searchResults, setSearchResults] = useState(data)\n  const [searchTerm, setSearchTerm] = useState(null)\n  const removeTag = (id, tag) => {\n    const itemIndex = data.findIndex((item) => item.id === id)\n    const item = { ...data[itemIndex] }\n    item.tags.splice(item.tags.indexOf(tag), 1)\n    const newData = [...data]\n    newData[itemIndex] = item\n    setData(newData)\n  }\n  const addTag = (id, tag) => {\n    const itemIndex = data.findIndex((item) => item.id === id)\n    const item = { ...data[itemIndex] }\n    if (!item.tags) {\n      item.tags = [tag]\n    } else {\n      item.tags.push(tag)\n    }\n    const newData = [...data]\n    newData[itemIndex] = item\n    setData(newData)\n  }\n\n  useEffect(() => {\n    const results = searchTerm\n      ? data.filter((item) => {\n          return item?.tags?.length > 0 ? item.tags.includes(searchTerm) : false\n        })\n      : data\n    setSearchResults(results)\n  }, [data, searchTerm])\n\n  return (\n    <div className='App'>\n      <div className='container'>\n        <div className='search-container'>\n          <TextField\n            type='search'\n            placeholder='Search Tags'\n            value={filterValue}\n            onChange={(e) => setFilterValue(e.target.value)}\n            onSubmit={() => setSearchTerm(filterValue)}\n          />\n        </div>\n        {searchResults?.length > 0 ? (\n          searchResults.map((item, key) => (\n            <Item item={item} key={key} addTag={addTag} removeTag={removeTag} />\n          ))\n        ) : (\n          <div>\n            Sorry we couldn&apos;t find any record with tag: {searchTerm}\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}